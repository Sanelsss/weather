{"version":3,"sources":["components/styles.js","components/Form.js","App.js","index.js"],"names":["useStyles","makeStyles","theme","typography","fontFamily","join","font","color","direction","justify","alignItems","opacity","margin","body","fontWeight","spacing","width","alarmButton","size","fontSize","oo","marginLeft","marginRight","marginTop","maxWidth","moscow","textAlign","temp","sun","cloud","cardContent","maxHeigt","collapse","backgroundColor","alert","hh","card","borderRadius","boxShadow","transition","grid","we","aa","ss","divider","root","display","flexWrap","justifyContent","overflow","maxHeight","gridList","transform","icon","da","nn","sok","Form","props","classes","className","GridList","cellHeight","lista","map","tile","GridListTile","rows","cols","Typography","variant","name","country","Grid","container","item","xs","md","Math","round","sm","description","humidity","speed","degrees","visib","GridListTileBar","title","titlePosition","actionIcon","IconButton","aria-label","actionPosition","id","api","App","useState","query","setQuery","weather","setWeather","setList","setMoscow","london","setLondon","setAlert","useEffect","localStorage","getItem","JSON","parse","setItem","stringify","pop","visibility","undefined","cnt","sys","wth","main","wnd","wind","desc","deg","push","clouds","React","expanded","setExpanded","Container","Alert","onClose","TextField","label","type","onChange","e","target","value","onKeyPress","key","fetch","then","res","json","result","onClick","style","blue","Card","CardContent","d","day","getDay","date","getDate","month","getMonth","year","getFullYear","dateBuilder","Date","CardActions","disableSpacing","clsx","expand","expandOpen","aria-expanded","Collapse","in","timeout","unmountOnExit","src","alt","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.04e260b2.chunk.js","sourcesContent":["import {makeStyles} from \"@material-ui/core/styles\";\r\nconst useStyles = makeStyles((theme)=>({\r\n        typography: {\r\n          fontFamily: [\r\n            '-apple-system',\r\n            'BlinkMacSystemFont',\r\n            '\"Segoe UI\"',\r\n            'monospace',\r\n            '\"Helvetica Neue\"',\r\n            'Arial',\r\n            'sans-serif',\r\n            '\"Apple Color Emoji\"',\r\n            '\"Segoe UI Emoji\"',\r\n            '\"Segoe UI Symbol\"',\r\n            '\"  Cambria, Cochin, Georgia, Times, Times New Roman serif \"',\r\n      \r\n          ].join(','),\r\n        },\r\n        font:{\r\n          color:\"#111\",\r\n          fontFamily: 'monospace',\r\n          direction: \"row\",\r\n          justify: \"center\",\r\n          alignItems: \"center\",\r\n          opacity:\"0.8\",\r\n          margin:0\r\n         },\r\n        body: {\r\n\r\n          fontWeight: 500,\r\n        },\r\n        margin: {\r\n          margin: theme.spacing(1),\r\n          width:\"10rem\",\r\n        },\r\n        alarmButton:{\r\n        size:50,\r\n        fontSize:\"20px\"\r\n        },\r\n        oo:{\r\n          marginLeft:\"auto\",\r\n          marginRight:\"auto\",\r\n          marginTop:1,\r\n          justify:\"center\",\r\n          maxWidth: 485, \r\n           },\r\n        moscow:{\r\n          fontFamily: \"Roboto\",\r\n          fontSize: 50,\r\n          textAlign: \"center\",\r\n        },\r\n        temp:{\r\n          fontFamily: \"Roboto\",\r\nmarginTop:0\r\n        },\r\n        sun:{\r\n          fontSize: 60,\r\n          color:\"rgb(240, 236, 5)\",\r\n          marginTop:0,\r\n          marginLeft:0,\r\n        },\r\n        cloud:{\r\n          fontSize: 60,\r\n          color:\"#fff\",\r\n          marginLeft:0,\r\n          marginTop:0,\r\n        },\r\n        cardContent:{\r\n           margin: theme.spacing(1), \r\n          maxHeigt:400,\r\n           fontWeight: 300,\r\n          textAlign: \"center\",      \r\n  },\r\n        collapse:{\r\n         margin:-20,\r\n         textAlign: \"center\",\r\n         backgroundColor:\" transparent\",\r\n       },\r\n       alert:{\r\n        width: '100%',\r\n        marginTop: theme.spacing(2),\r\n        backgroundColor:\" #fff\",\r\n      },\r\n        hh:{\r\n          direction: \"row\",\r\n          justify: \"center\",\r\n          alignItems: \"center\",\r\n        },\r\n        card:{\r\n          marginLeft:\"auto\",\r\n          marginRight:\"auto\",\r\n          marginTop:\"2rem\",\r\n          maxWidth: 445,\r\n          backgroundColor:\"rgba(255, 255, 255, 0.4)\",\r\n          borderRadius:\" 16px 16px 16px 16px\",\r\n          boxShadow:\" 0px 5px rgba(0, 0, 0, 0.2)\",      \r\n          color: \"#313131\",\r\n          transition: \"0.4s ease\",\r\n        },\r\n        grid:{  \r\n          width: \"100%\", \r\n          backgroundColor:\" rgba(255, 255, 255, 0.4)\",\r\n          borderRadius:\" 0px 0px 16px 16px\",\r\n        maxWidth: 455,\r\n        boxShadow:\" 0px 5px rgba(0, 0, 0, 0.2)\",  \r\n          color: \"#313131\",\r\n          fontSize: \"20px\",     \r\n          transition: \"0.4s ease\",\r\n        },\r\n        we: {\r\n          '& > *': {\r\n            margin: theme.spacing(2),\r\n            width: '20ch',\r\n            color:\"#1dw11\",\r\n            fontSize: \"20px\",\r\n          }\r\n        },\r\n      aa: {\r\n          borderRadius: \"5rem\",\r\n          color:\"#111\",\r\n          backgroundColor: \"transparent\",\r\n          width: '3rem',\r\n          fontSize: 22,\r\n          margin: theme.spacing(1),\r\n      \r\n      },\r\n      ss:{\r\n      margin: theme.spacing(1),\r\n        direction: \"row\",\r\n        justify: \"center\",\r\n        alignItems: \"center\",\r\n      },\r\n      divider: {\r\n        margin: theme.spacing(2, 0),\r\n        backgroundColor: \"#fff\",\r\n      },\r\n      \r\n  }))\r\n  export default useStyles;","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport GridList from '@material-ui/core/GridList';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport GridListTile from '@material-ui/core/GridListTile';\r\nimport GridListTileBar from '@material-ui/core/GridListTileBar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport StarBorderIcon from '@material-ui/icons/StarBorder';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport InvertColorsIcon from '@material-ui/icons/InvertColors';\r\nimport VisibilitySharpIcon from '@material-ui/icons/VisibilitySharp';\r\nimport NearMeIcon from '@material-ui/icons/NearMe';\r\nimport { TiThermometer } from \"react-icons/ti\";\r\nimport { WiStrongWind } from \"react-icons/wi\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n    justifyContent: 'space-around',\r\n    overflow: 'hidden',\r\n    maxWidth: \"530px\",\r\n    maxHeight: \"440px\",\r\n    borderRadius:\" 16px 16px 16px 16px\",\r\n    backgroundColor:\" rgba(255, 255, 255, 0.4)\",  \r\n  },\r\n  gridList: {\r\n    width: 600,\r\n    maxHeight: 450,\r\n    marginTop:\"1rem\",\r\n    transform: 'translateZ(0)',\r\n    },\r\n  icon: {\r\n    color: 'white',\r\n  },\r\n  da:{\r\n       marginTop:\"0rem\", \r\n      },\r\n     nn:{\r\n      marginTop:\"0rem\", \r\n      marginLeft:\"3%\",\r\n       },\r\n sun:{\r\n  fontSize: 45,\r\n  color:\"#111\",\r\n  marginTop:5,\r\n  marginRight:0,\r\n  marginLeft:5,\r\n  opacity:0.6,\r\n   },\r\n   sok:{\r\n justifyContent:\"center\",\r\n alignItems:\"center\"\r\n     }\r\n}));\r\nexport default function Form(props) {\r\n  const classes = useStyles();\r\n  return (\r\n  <div className={classes.root}>\r\n  <GridList cellHeight={255} spacing={2} className={classes.gridList}>\r\n    {props.lista.map((tile) => (\r\n      <GridListTile  key={tile.id} rows={1}  cols={2}>\r\n    <div className={classes.da} >\r\n         <Typography className={classes.nn} variant=\"h2\" \r\n    /* color=\"#fff\" */ > {tile.name} / {tile.country}  \r\n          </Typography> \r\n          <div className=\"col-xs-6 col-lg-6  rows \">  \r\n          <Grid container className={classes.sok} >\r\n      <Grid item xs={6} md={4}>\r\n        <span className=\"icon\">{Math.round(tile.temp)}\r\n        <h3 className=\"icon\">°c</h3></span>     \r\n      </Grid>\r\n      <Grid item xs={6} md={4}>\r\n      <TiThermometer className={classes.sun} />\r\n       </Grid>\r\n       <Grid item md={9} sm={12} xs={12} >\r\n    <span className=\"icon-desc\">{tile.description}</span>     \r\n   </Grid>  \r\n         <Grid item xs={6}   md={4}>\r\n         <span className=\"icon\">{tile.humidity}\r\n         <h3 className=\"icon\">%</h3></span>     \r\n             </Grid>\r\n      <Grid item xs={6} md={4}>\r\n      <InvertColorsIcon className={classes.sun} />\r\n       </Grid>\r\n      </Grid>\r\n       </div>\r\n       <div className=\"col-xs-6 col-lg-6 rows\" >\r\n       <Grid container className={classes.sok} >\r\n       <Grid item xs={6}  md={7}>\r\n        <span className=\"icon\">{tile.speed}\r\n        <h3 className=\"icon\">m/s</h3></span>     \r\n      </Grid>\r\n      <Grid item xs={6} md={5}>\r\n      <WiStrongWind className={classes.sun} />\r\n       </Grid>\r\n       <Grid item xs={6} md={7}>\r\n       <span className=\"icon\">{tile.degrees}°\r\n       </span>     \r\n      </Grid>\r\n      <Grid item xs={6}  md={5}  >\r\n      <NearMeIcon className={classes.sun} />\r\n       </Grid>\r\n      <Grid item  md={7} xs={6} >\r\n       <span className=\"icon\">{tile.visib}\r\n       <h3 className=\"icon\" >m</h3></span>     \r\n      </Grid>\r\n      <Grid item  md={5} xs={6}   >\r\n      <VisibilitySharpIcon className={classes.sun} />\r\n       </Grid>\r\n       </Grid>\r\n</div>\r\n        </div>   \r\n       <GridListTileBar\r\n          title={tile.title}\r\n          titlePosition=\"top\"\r\n          actionIcon={\r\n            <IconButton aria-label={`star ${tile.title}`} className={classes.icon}>\r\n              <StarBorderIcon />   \r\n            </IconButton>\r\n          }\r\n          actionPosition=\"right\" /> \r\n      </GridListTile>\r\n    ))}\r\n  </GridList>\r\n</div>\r\n   \r\n  );\r\n }\r\n \r\n\r\n\r\n\r\n\r\n","import TextField from \"@material-ui/core/TextField\";\nimport Container from \"@material-ui/core/Container\";\nimport Grid from \"@material-ui/core/Grid\";\nimport {blue } from '@material-ui/core/colors';\nimport IconButton from \"@material-ui/core/IconButton\";\nimport clsx from 'clsx';\nimport DeleteOutlineIcon from '@material-ui/icons/DeleteOutline';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardActions from '@material-ui/core/CardActions';\nimport Collapse from '@material-ui/core/Collapse';\nimport Typography from '@material-ui/core/Typography';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport Alert from '@material-ui/lab/Alert';\nimport useStyles from \"./components/styles\";\nimport React, { useState, useEffect } from 'react';\nimport Form from \"./components/Form\";\nimport { BsSun } from \"react-icons/bs\";\nimport { GiRaining } from \"react-icons/gi\";\nimport { MdWbCloudy } from \"react-icons/md\";\nimport { FaCloudSunRain } from \"react-icons/fa\";\n\nconst api = {\n  key: \"cd76820f9ccbf766b587f69b63167394\",\n  base: \"https://api.openweathermap.org/data/2.5/\"\n}\nfunction App() {\n  const [query, setQuery] = useState('');\n  const [weather, setWeather] = useState({});\n  const [lista, setList] = useState([]);\n  const [moscow, setMoscow] = useState(\"Please enter some values\");\n  const [london, setLondon] = useState();\n  const [alert, setAlert] = useState(false);\n\n  useEffect(() => {\n    //const data = localStorage.getItem(\"nesto\");\n    const da = localStorage.getItem(\"svasta\");\n   // setWeather(weather);\n    if (/* data&& */da) {\n      // setWeather(JSON.parse(data));\n      setList(JSON.parse(da));\n    }\n  }, []);\n\n  useEffect(() => {\n    //localStorage.setItem(\"nesto\",JSON.stringify(weather));\n    localStorage.setItem(\"svasta\", JSON.stringify(lista));\n  });\n  useEffect(() => {\n    lista.map(item => { \n      if (item.name === weather.name) {\n        lista.pop();\n        //lista.splice(item,1);\n        //lista.pop(item);\n        setAlert(true); setWeather(weather);\n      } if (item.name !== weather.name) {\n        setAlert(false);\n      }   \n      return item;\n    });\n      const name = weather.name;  \n     const visib = weather.visibility;\n    if (name !== ('') && name !== undefined && weather ) {\n      const cnt = weather.sys; const wth = weather.main;\n      const wnd = weather.wind; const desc= weather.weather[0];\n      const country = cnt.country; const temp = wth.temp;\n      const humidity= wth.humidity;const speed = wnd.speed;\n      const degrees = wnd.deg;const description = desc.description;\n    lista.push({name,visib,country,temp,humidity,speed,degrees,description});\n    setMoscow(\"that city was not found\");\n   \n    if(description === \"clear sky\"){\n      setLondon(<BsSun className={classes.sun}/>)\n    }else if(description === \"light rain\"){\n      setLondon(<GiRaining className={classes.clouds}/>)\n    } else if(description === \"overcast clouds\"){\n      setLondon(<MdWbCloudy className={classes.clouds}/>)\n    }else if(description === \"scattered clouds\" ){\n      setLondon(<FaCloudSunRain className={classes.sun}/>)\n    }else{\n      setLondon(<FaCloudSunRain className={classes.sun}/>)\n    }\n      return lista;\n    };\n  }, [weather]);\n  const search = (ss, e) => {\n    if (ss.key === \"Enter\") {\n      fetch(`${api.base}weather?q=${query}&units=metric&APPID=${api.key}`)\n        .then(res => res.json())\n        .then(result => {\n          setWeather(result);\n          setQuery(\"\");\n        });\n    }\n  };\n \n  const dateBuilder = (d) => {\n    let months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n    let days = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"];\n    let day = days[d.getDay()];\n    let date = d.getDate();\n    let month = months[d.getMonth()];\n    let year = d.getFullYear();\n    return `${day} ${date} ${month} ${year}`\n  }\n  const [expanded, setExpanded] = React.useState(false);\n  const handleExpandClick = () => {\n    setExpanded(!expanded);\n  };\n  const classes = useStyles();\n  return (\n    <div className={(typeof weather.main != \"undefined\") ? ((weather.weather[0].description==='clear sky') ? \n    'wrapper app ' : 'wrapper app-warm') : 'wrapper '}>\n      <div className=\"col-xs-10 col-lg-6  title-container\">\n        <Container className={classes.oo} >\n          {alert ? (<Alert onClose={() => {setAlert(false) }}>\n            You have already selected this city!</Alert>)\n            : (\" \")}\n          <Grid className={classes.grid}\n            container spacing={0}\n            direction=\"row\" justify=\"center\" alignItems=\"center\" >\n            <Grid item xs={7} /* lg={2} */ sm={5} md={6} className=\"search-box\" /*className={classes.root} */ >\n              <TextField size=\"medium\" id=\"standard-search\"\n                label=\"Search ...\" color=\"primary\"\n                type=\"search\" variant=\"outlined\"\n                onChange={e => setQuery(e.target.value)}\n                value={query} onKeyPress={search}\n              />\n            </Grid>\n            <Grid item xs={2} /* lg={1} */ sm={3} md={2}  >\n              <IconButton onClick={() => { setList([]) }} color=\"primary\" size=\"medium\" aria-label=\"add an alarm\">\n                <DeleteOutlineIcon style={{ fontSize: 40, color: blue[900] }} />\n              </IconButton>\n            </Grid>\n          </Grid>\n        </Container>\n        {(typeof weather.sys != \"undefined\") ? (\n          <Card className={classes.card}>   \n            <CardContent className={classes.cardContent}>\n              <Container  >\n                <Typography className={classes.font}  variant=\"h3\" color=\"secondary\">\n                  {weather.name},      {weather.sys.country}\n                </Typography>\n                <Typography className={classes.font} variant=\"h3\" color=\"secondary\" >\n                  Humidity:{weather.main.humidity}%</Typography>\n                <Typography className={classes.font} variant=\"h3\" color=\"secondary\" >\n                  {dateBuilder(new Date())}\n                </Typography>\n                <Typography className={classes.font} variant=\"h1\" color=\"secondary\"\n                 /* className={classes.temp} */ >\n                  {Math.round(weather.main.temp)}°c\n                  {}\n                 <span>{london}</span>\n                </Typography>\n                <Typography className={classes.font}     variant=\"h3\" color=\"secondary\" >\n                  {weather.weather[0].description}\n                </Typography>\n              </Container>\n            </CardContent>\n            <CardActions disableSpacing className={classes.font}>\n              see more\n              <IconButton\n                className={clsx(classes.expand, {\n                  [classes.expandOpen]: expanded,\n                })}\n                onClick={handleExpandClick}\n                aria-expanded={expanded}\n                aria-label=\"show more\">\n                {\"\"} <ExpandMoreIcon />\n              </IconButton>\n            </CardActions>\n            <Collapse in={expanded} timeout=\"auto\" unmountOnExit>\n              <CardContent className={classes.collapse}>\n                <Typography className={classes.font} variant=\"h3\" color=\"secondary\" >\n                  Windspeed: {weather.wind.speed}m/s</Typography>\n                  <Typography className={classes.font} variant=\"h3\" color=\"secondary\" >\n                  Direction: {weather.wind.deg}°</Typography>\n                <Typography className={classes.font} variant=\"h3\" color=\"secondary\" >\n                  Visibility: {weather.visibility}m</Typography>\n              </CardContent>\n            </Collapse>\n          </Card>\n        ) : (\n          <Typography className={classes.moscow} color=\"primary\" >\n            {moscow}</Typography>\n        )}\n      </div>\n      <div className=\"col-xs-10 col-lg-6 form-container\">\n        {lista[0]?(<Form lista={lista} {...lista} key={lista.id} />) : (\n          <img className=\"main\" src=\"../saw.jpg\" alt=\"\" />\n        )}\n      </div>\n    </div>\n  );\n}\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\nimport \"./App.css\";\nimport App from './App';\n\nReactDOM.render(\n  \n    <App />\n ,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}